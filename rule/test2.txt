
(defrule init (condition (empty null))(consequence (add   ?fact  is-milk-giver  animal)(add   ?fact  has-hooves  animal)(add   ?fact  has-black-stripes  animal)(disable self)))
(defrule mammal-1 (condition (match   has-hair  ?var))(consequence (add   ?fact_n  is-animal  ?var)))
(defrule mammal-2 (condition (match   is-milk-giver  ?var))(consequence (add   ?fact_n  is-mammal  ?var)))
(defrule bird-1 (condition (match   has-feathers  ?var))(consequence (add   ?fact  is-bird  ?var)))
(defrule bird-2 (condition (match   is-flier  ?var)(match   is-egg-layer  ?var))(consequence (add   ?fact  is-bird  ?var)))
(defrule carnivore-1 (condition (match   is-meat-eater  ?var))(consequence (add   ?fact  is-carnivore  ?var)))
(defrule carnivore-2 (condition (match   has-pointed-teeth  ?var)(match   has-claws  ?var)(match   has-forward-eyes  ?var))(consequence (add   ?fact  is-carnivore  ?var)))
(defrule ungulate-1 (condition (match   is-mammal  ?var)(match   has-hooves  ?var))(consequence (add   ?fact  is-ungulate  ?var)))
(defrule ungulate-2 (condition (match   is-mammal  ?var)(match   is-cud-chewer  ?var))(consequence (add   is-ungulate  ?var)))
(defrule even-toed (condition (match   is-mammal  ?var)(match   is-cud-chewer  ?var))(consequence (add   ?fact  is-even-toed  ?var)))
(defrule cheetah (condition (match   is-mammal  ?var)(match   is-carnivore  ?var)(match   is-tanwny-colored  ?var)(match   has-dark-spots  ?var))(consequence (add   &fact  is-cheetah?)(print "Animal is a cheetah")(quit null)))
(defrule tiger (condition (match   is-mammal  ?var)(match   is-carnivore  ?var)(match   is-tawny-colored  ?var)(match   has-black-strips  ?var))(consequence (add   ?fact  is-tiger  ?var)(print "Animal is a tiger")(quit null)))
(defrule giraffe (condition (match   is-ungulate  ?var)(match   has-long-neck  ?var)(match   has-long-legs  ?var)(match   has-dark-spots  ?var))(consequence (add   ?fact  is-giraffe  ?var)(print "Animal is a giraffe")(quit null)))
(defrule zebra (condition (match   is-ungulate  ?var)(match   has-black-stripes  ?var))(consequence (add   ?fact  is-zebra  ?var)(print "Animal is a zebra")(quit null)))